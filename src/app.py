import streamlit as st
import os
from agents.blogpostcreator import BlogPostCreator

with st.sidebar:
    "## ‚úçÔ∏è Blog Post Generator"

    "### How to use"

    """
    1. Enter the number of web references you want to use. (Max 10).
    2. Enter your [OpenAI API key](https://platform.openai.com/api-keys) below.
    3. Enter the keyword you want to generate a blog post for.
    4. Click on the "Generate blog post" button.
    """
            
    web_references = st.number_input(
        label="Enter number of web references to use",
        max_value=10,
        min_value=1,
        value=3,
    )
    
    openai_api_key = st.text_input(
        label="OpenAI API Key",
        type="password"
        )
    
    os.environ['OPENAI_API_KEY'] = openai_api_key

    st.divider()

    """
    ### About

    ‚úçÔ∏è Blog Post Generator allows you to generate an SEO optimised blog post from keywords. 
    It uses web references from top ranking articles to generate your blog post. 
    It also allows you to specify a number of web links to use. 
    It only allows a maximum of 10.
    """

    st.divider()

    """
    ### FAQs

    #### How does it work?
    The Blog Post Generator uses web references from top ranking articles to generate your blog post.

    #### Is the information generated by the agent accurate?
    The agent generates information based on the web references provided. It is recommended to verify the information generated.

    #### How many web references can I use?
    You can use a maximum of 10 web references.

    #### How do I get an OpenAI API key?
    You can get an OpenAI API key by signing up at [OpenAI](https://platform.openai.com/account/api-keys).

    """

    st.divider()

st.title(" ‚úçÔ∏è Blog Post Generator ")

if not openai_api_key:      
    st.info("Enter your OpenAI API key in the sidebar. You can get a key at https://platform.openai.com/account/api-keys.")

with st.form(key="generate_blog_post"):
    keyword = st.text_input(label= "Enter a keyword", placeholder="")

    submitted = st.form_submit_button("Generate blog post")
    
if submitted  and not openai_api_key:
        st.info("Please enter your OpenAI API key", icon="‚ÑπÔ∏è")
        
elif submitted and not keyword:
        st.warning("Please enter a keyword", icon="‚ö†Ô∏è")
        
elif submitted:
    creator = BlogPostCreator(keyword, web_references)       
    response = creator.create_blog_post()

    if response is None or not response:
          st.status("Generating ... ")    
    elif isinstance(response, Exception):
            st.warning("An error occured. Please try again!")
            st.error(response, icon="üö®")
    
    else:
            st.write("### Generated blog post")
            st.write(response)
            st.snow()

